# Docker Compose for Legisense - Complete Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: legisense-postgres
    environment:
      POSTGRES_DB: legisense_db
      POSTGRES_USER: legisense_user
      POSTGRES_PASSWORD: legisense_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./legisense_backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - legisense-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U legisense_user -d legisense_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: legisense-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - legisense-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend API
  backend:
    build:
      context: ./legisense_backend
      dockerfile: Dockerfile
      target: production
    container_name: legisense-backend
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://legisense_user:legisense_password@postgres:5432/legisense_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:80
    volumes:
      - ./legisense_backend:/app
      - backend_media:/app/media
      - backend_static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - legisense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flutter Frontend (Web)
  frontend:
    build:
      context: ./legisense
      dockerfile: Dockerfile
      target: production
    container_name: legisense-frontend
    environment:
      - LEGISENSE_API_BASE=http://backend:8000
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - legisense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production-like)
  nginx:
    image: nginx:alpine
    container_name: legisense-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - legisense-network
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: legisense-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - legisense-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: legisense-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - legisense-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_media:
    driver: local
  backend_static:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  legisense-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
